<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd						
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-4.1.xsd
	">

	<!-- 开启注解 -->
	<!-- <mvc:annotation-driven /> -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
			</bean>
			<bean class="org.springframework.http.converter.json.GsonHttpMessageConverter">
				<!-- <property name="objectMapper" ref="jacksonObjectMapper" /> -->
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- <bean id="jacksonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper"> <property name="dateFormat" ref="dateFormat" /> </bean> -->
	<!-- 任务 -->
	<task:annotation-driven />

	<!-- 扫描包 -->
	<context:component-scan base-package="com.*,Controller" />

	<!-- 开启aop -->
	<aop:aspectj-autoproxy />

	<!-- 视图 -->
	<!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" /> <property name="prefix" value="/WEB-INF/views/" /> <property name="suffix" value=".jsp" /> </bean> -->


	<mvc:view-controller path="/" view-name="index" />

	<!-- FreeMarker settings -->
	<bean id="freeMarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/view/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
				<!-- <prop key="datetime_format">yyyy-MM-dd</prop> -->
				<!-- <prop key="date_format">yyyy-MM-dd</prop> -->
				<!-- <prop key="number_format">#.##</prop> -->
			</props>
		</property>
	</bean>

	<!-- FreeMarker view Reslover -->
	<bean id="freeMarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="cache" value="false" />
		<!-- <property name="prefix" value="/WEB-INF/view/" /> -->
		<!-- <property name="suffix" value=".ftl" /> -->
		<property name="suffix" value=".html" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<!-- exposeRequestAttributes exposeSessionAttributes两个属性都被设置为true。 -->
		<!-- 结果是请求和会话属性都被复制到模板的属性集中，可以使用FreeMarker的表达式语言来 -->
		<!-- 访问并显示。 -->
		<property name="requestContextAttribute" value="requestContext" />
		<property name="attributes">
			<props>
<!-- 				<prop key="jqueryVersion">jquery-2.1.3.js</prop>
				<prop key="angularjsVersion">1.4.0-rc.1</prop> -->
			</props>
		</property>
	</bean>




	<!-- jdbc.properties -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:jdbc.properties" />
		<!-- <property name="locations" value="/WEB-INF/jdbc.properties" /> -->
	</bean>

	<bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">

		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<property name="acquireIncrement" value="10" />
		<!-- 定义在从数据库获取新连接失败后重复尝试获取的次数，默认为30 -->
		<property name="acquireRetryAttempts" value="100" />
		<!-- 两次连接中间隔时间，单位毫秒，默认为1000 -->
		<property name="acquireRetryDelay" value="1000" />
		<!-- 连接关闭时默认将所有未提交的操作回滚。默认为false -->
		<property name="autoCommitOnClose" value="false" />
		<!-- 获取连接失败将会引起所有等待获取连接的线程抛出异常。但是数据源仍有效保留，并在下次调 用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。默认为 false； -->
		<property name="breakAfterAcquireFailure" value="false" />
		<!-- 当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒，默认为0； -->
		<property name="checkoutTimeout" value="0" />
		<!-- 始化时创建的连接数，应在minPoolSize与maxPoolSize之间取值。默认为3； -->
		<property name="initialPoolSize" value="10" />
		<!-- 最大空闲时间，超过空闲时间的连接将被丢弃。为0或负数则永不丢弃。默认为0； -->
		<property name="maxIdleTime" value="10000" />
		<!-- 接池中保留的最大连接数。默认为15 -->
		<property name="maxPoolSize" value="40" />
		<!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatement数量。但由于预缓存的Statement属 于单个Connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素，如果maxStatements与 maxStatementsPerConnection均为0，则缓存被关闭。默认为0； -->
		<property name="maxStatements" value="50" />
		<!-- 连接池内单个连接所拥有的最大缓存Statement数。默认为0； -->
		<property name="maxStatementsPerConnection" value="0" />
		<!--C3P0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能，通过多线程实现多个操作同时被执行。默认为3； -->
		<property name="numHelperThreads" value="3" />
		<!-- 用户修改系统配置参数执行前最多等待的秒数。默认为300； -->
		<property name="propertyCycle" value="600" />
	</bean>


	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		<!--实体类 -->
		<property name="packagesToScan" value="com.freepig.*">
		</property>
		<property name="hibernateProperties">
			<props>
				<!-- <prop key="current_session_context_class">thread</prop> -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- <prop key="hibernate.autoReconnect">true</prop> -->
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>
